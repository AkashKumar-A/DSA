/**********************************************************

	Following is the Binary Tree Node class structure

	template <typename T>
	class BinaryTreeNode {
    	public : 
    	T data;
    	BinaryTreeNode<T> *left;
    	BinaryTreeNode<T> *right;

    	BinaryTreeNode(T data) {
        	this -> data = data;
        	left = NULL;
        	right = NULL;
    	}
	};

***********************************************************/

void printLevelWise(BinaryTreeNode<int> *root) {
    // Write your code here
    if(root==nullptr) return;
    
    queue<BinaryTreeNode<int>*> print;
    print.push(root);
    while(print.size() != 0 ){
         int len = print.size();
        while(len>0){
            BinaryTreeNode<int>* front = print.front();
        	print.pop();
        	cout<<front->data<<" ";
        	if(front->left!=NULL){
            	print.push(front->left);
            }
        
        	if(front->right!=NULL){
             	print.push(front->right);
        	}
            len--;
        }
         
        cout<<endl;   

        }
}